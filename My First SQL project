Select *
From layoffs;

Create table Layoffs_staging
Like layoffs;

select *
from layoffs;

select * 
from layoffs_staging;

Insert into Layoffs_staging
select *
from layoffs;

select * ,
row_number() over(partition by company, location, industry, total_laid_off, percentage_laid_off, 'date',stage, country, funds_raised_millions) AS row_num
from layoffs_staging;


With duplicate_CTE as
(
select * ,
row_number() over(partition by company, location, industry, total_laid_off, percentage_laid_off, 'date', 
stage, country, funds_raised_millions ) AS row_num
from layoffs_staging
)
select *
from duplicate_CTE
where row_num > 1;

Select*
from layoffs_staging
where company = 'casper';


CREATE TABLE `layoff_staging` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
   `row_num` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


select *
from layoff_staging;

insert into layoff_staging
select * ,
row_number() over(partition by company, location, industry, total_laid_off, percentage_laid_off, 'date', 
stage, country, funds_raised_millions ) AS row_num
from layoffs_staging;

Delete 
from layoff_staging
where row_num > 1;

select *
from layoff_staging;

select company, trim(company)
from layoff_staging;


Update layoff_staging
set company = trim(company);


select company
from layoff_staging;

select distinct industry
from layoff_staging
order by 1
;

Select *
from layoff_staging
where industry like 'Crypto%';
 
 Update layoff_staging
 set industry = 'Crypto'
 where industry like 'Crypto%';  
 
 Select *
from layoff_staging
where  country like 'United States%';

Select country, trim(country)
from layoff_staging
;

Update layoff_staging
 set industry = 'United States'
 where industry like 'United States%';  
 
 Update layoff_staging
 set country = trim(country);

select `date`,
str_to_date (`date`, '%m/%d/%Y')
from layoffs_staging;

Update layoff_staging
 set `date`= str_to_date (`date`, '%m/%d/%Y');

select *
from layoff_staging;

Alter table layoff_staging
Modify column `date` DATE;

update layoff_staging
set industry = Null
where industry = '';

select *
from layoff_staging
where company = 'Airbnb';


select *
from layoff_staging t1
join layoff_staging t2
  on t1.company = t2.company
where (t1.industry is NULL ) and  t2.industry is not Null ;

update layoff_staging t1
join layoff_staging t2
  on t1.company = t2.company
set t1.industry = t2.industry
where (t1.industry is NULL) and  t2.industry is not Null ;

select country, sum(total_laid_off), industry
from layoff_staging
where country = 'Nigeria'
group by industry;

select substring(`date`, 1,7) AS month, sum(total_laid_off)
from layoff_staging
where substring(`date`, 1,7)  is not null
group by substring(`date`, 1,7) 
order by 1 asc;


with rolling_total as
(select substring(`date`, 1,7) AS month, sum(total_laid_off) as total_off
from layoff_staging
where substring(`date`, 1,7)  is not null
group by substring(`date`, 1,7) 
order by 1 asc
)

select `month`, total_off, sum(total_off) over(order by `month`) AS rolling_total
from rolling_total;

select company, sum(total_laid_off)
from layoff_staging
group by company
order by 2 desc ;

select company, year(`date`), sum(total_laid_off)
from layoff_staging
group by company, year(`date`)
order by 3 desc ;

with company_year (company, years, total_laid_off) as
(select company, year(`date`), sum(total_laid_off)
from layoff_staging
group by company, year(`date`)
order by 3 desc 
),


company_year_rank as 
(select *, dense_rank() over(partition by years order by total_laid_off desc) as ranking
from company_year
where years is not null
)

select *
from company_year_rank
where ranking <= 5;


select distinct count(company)
from layoff_staging;



 

